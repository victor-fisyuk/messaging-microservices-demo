# Provisions the following containers:
#   - PostgreSQL 14.2
#   - Keycloak 14.0.0
#   - Consul 1.11.4
#   - Redis 6.2.6
#   - Zookeeper 3.8.0
#   - Kafka 3.1.0 (3 brokers)
#   - Kafdrop 3.29.0

services:
  postgres:
    image: postgres:14.2
    container_name: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    volumes:
      - postgres-data:/var/lib/postgresql/data

  keycloak:
    image: jboss/keycloak:14.0.0
    container_name: keycloak
    restart: always
    ports:
      - '8180:8080'
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=secret
      - DB_ADDR=postgres
      - DB_PORT=5432
      - DB_DATABASE=keycloak
      - DB_USER=postgres
      - DB_PASSWORD=secret
      - KEYCLOAK_FRONTEND_URL=http://localhost:8180/auth/
    depends_on:
      - postgres

  consul:
    image: consul:1.11.4
    container_name: consul
    restart: always
    ports:
      - '8500:8500'
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    volumes:
      - consul-data:/consul/data

  redis:
    image: redis:6.2.6
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  # Kafka

  zookeeper:
    image: 'bitnami/zookeeper:3.8.0'
    container_name: zookeeper
    ports:
      - '2181:2181'
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/bitnami/zookeeper

  kafka1:
    image: 'bitnami/kafka:3.1.0'
    container_name: kafka1
    ports:
      - '9093:8092'
    restart: always
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:8092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    depends_on:
      - zookeeper
    volumes:
      - kafka1-data:/bitnami/kafka

  kafka2:
    image: 'bitnami/kafka:3.1.0'
    container_name: kafka2
    ports:
      - '9094:8092'
    restart: always
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:8092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    depends_on:
      - zookeeper
    volumes:
      - kafka2-data:/bitnami/kafka

  kafka3:
    image: 'bitnami/kafka:3.1.0'
    container_name: kafka3
    ports:
      - '9095:8092'
    restart: always
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:8092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://localhost:9095
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    depends_on:
      - zookeeper
    volumes:
      - kafka3-data:/bitnami/kafka

  kafdrop:
    image: obsidiandynamics/kafdrop:3.29.0
    container_name: kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:9092,kafka2:9092,kafka3:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka1
      - kafka2
      - kafka3

volumes:
  postgres-data:
    name: postgres-data
  consul-data:
    name: consul-data
  redis-data:
    name: redis-data
  zookeeper-data:
    name: zookeeper-data
  kafka1-data:
    name: kafka1-data
  kafka2-data:
    name: kafka2-data
  kafka3-data:
    name: kafka3-data

networks:
  default:
    name: messaging-microservices-demo
